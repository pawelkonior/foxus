{"version":3,"sources":["components/Webcam.js","components/nav.js","components/playerComponent.js","App.js","serviceWorker.js","index.js","logo.png"],"names":["videoConstraints","facingMode","WebcamComponent","ws","webcamRef","React","useRef","capture","useCallback","imageSrc","current","getScreenshot","emit","stream","id","useEffect","interval","setInterval","clearInterval","audio","ref","screenshotFormat","width","useStyles","makeStyles","root","justifyContent","NavComponent","toggle","classes","useState","value","setValue","changeView","val","BottomNavigation","onChange","event","newValue","showLabels","className","BottomNavigationAction","label","onClick","icon","PlayerComponent","idx","status","player","color","setColor","on","payload","src","style","height","boxSizing","boxShadow","marginBottom","marginRight","zIndex","position","alt","theme","main","display","flexGrow","background","control","padding","spacing","audience","alignItems","alignContent","flexWrap","paddingTop","panel","speaker","bar","dark","info","teacher","data","socket2","socket","App","connect","setConnect","view","setView","logo","margin","borderRadius","map","e","key","Webcam","LinearProgress","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.3b05dfff.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport Webcam from \"react-webcam\"\n\n// const io = require('socket.io-client');\n// const socket = io('http://localhost:3011');\n\nconst videoConstraints = {\n  // width: 640,\n  // height: 640,\n  facingMode: \"user\"\n};\n\nconst WebcamComponent = ({ws}) => {\n  const webcamRef = React.useRef(null);\n\n  const capture = React.useCallback(\n    () => {\n      const imageSrc = webcamRef.current.getScreenshot();\n      if (imageSrc !== null){\n        ws.emit('stream', {stream: imageSrc, id: 1});\n      }\n    },\n    [webcamRef]\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      capture()\n    }, 30);\n    return () => clearInterval(interval);\n  }, [capture]);\n\n  return (\n    <>\n      <Webcam\n        audio={false}\n        // height={720}\n        ref={webcamRef}\n        screenshotFormat=\"image/jpeg\"\n        width={320}\n        videoConstraints={videoConstraints}\n      />\n    </>\n  );\n};\n\nexport default WebcamComponent","import React from \"react\";\nimport {makeStyles} from '@material-ui/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\n\n\nconst useStyles = makeStyles({\n  root: {\n    justifyContent: \"center\",\n\n  },\n});\n\n\nconst NavComponent = ({toggle}) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(true);\n\n  const changeView = (val) => {\n    toggle(val)\n  };\n\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n      className={classes.root}\n    >\n      <BottomNavigationAction label=\"Self concentration manager\" onClick={() => changeView(true)} icon={<RestoreIcon/>}/>\n      <BottomNavigationAction label=\"Teacher dashboard\" onClick={() => changeView(false)} icon={<FavoriteIcon/>}/>\n    </BottomNavigation>\n  )\n};\n\nexport default NavComponent;","import React, {useEffect, useRef, useState} from \"react\";\n// import ReactPlayer from \"react-player\";\n\nfunction encode (input) {\n  var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n  var output = \"\";\n  var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n  var i = 0;\n\n  while (i < input.length) {\n    chr1 = input[i++];\n    chr2 = i < input.length ? input[i++] : Number.NaN; // Not sure if the index\n    chr3 = i < input.length ? input[i++] : Number.NaN; // checks are needed here\n\n    enc1 = chr1 >> 2;\n    enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n    enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n    enc4 = chr3 & 63;\n\n    if (isNaN(chr2)) {\n      enc3 = enc4 = 64;\n    } else if (isNaN(chr3)) {\n      enc4 = 64;\n    }\n    output += keyStr.charAt(enc1) + keyStr.charAt(enc2) +\n      keyStr.charAt(enc3) + keyStr.charAt(enc4);\n  }\n  return output;\n}\n\nconst PlayerComponent = ({idx, status, ws}) => {\n  const player = useRef(null);\n  const colors = [\"#ffffff\", \"#00ff09\", \"#ff0000\", \"#000dff\"];\n\n  const [color, setColor] = useState(status);\n\n  useEffect(() => {\n    ws.on('stream processed', payload => {\n      player.current.src = payload\n    });\n  }, [ws]);\n\n  useEffect(() => {\n    ws.on('user processed', payload => {\n      if (payload.idx === idx) {\n        setColor(payload.status)\n      }\n    });\n  }, [ws]);\n\n  return (\n    <div style={{\n      width: \"640px\",\n      // maxWidth: \"40%\",\n      height: \"480px\",\n      // maxHeight: \"200px\",\n      boxSizing: \"border-box\",\n      boxShadow: \"0px 0px 5px 3px\" + colors[color],\n      marginBottom: \"15px\",\n      marginRight: \"15px\",\n      zIndex: 10,\n      position: \"relative\"\n    }}>\n      <img src=\"\" alt=\"\" ref={player}/>\n    </div>\n  )\n};\n\nexport default PlayerComponent;","import React, {useState, useEffect, useRef} from 'react';\nimport './App.css';\nimport {makeStyles} from '@material-ui/core/styles';\nimport WebcamComponent from \"./components/Webcam\";\nimport NavComponent from \"./components/nav\";\nimport ConcentrationChartComponent from \"./components/concentrationChart\";\nimport PlayerComponent from \"./components/playerComponent\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\n\nimport logo from './logo.png'\nimport socket from 'socket.io-client';\n\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    display: \"flex\"\n  },\n  root: {\n    flexGrow: 1,\n    background: '#424242'\n\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  audience: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"flex-start\",\n    alignContent: 'flex-start',\n    flexWrap: \"wrap\",\n    padding: \"5px\",\n    paddingTop: \"15px\",\n    boxSizing: \"content-box\",\n    flexGrow: 3,\n    width: \"100%\"\n  },\n  panel: {\n    flexGrow: 1\n  },\n  speaker: {},\n  bar: {\n    width: \"100%\"\n  },\n  dark: {\n    background: '#424242'\n  },\n  info: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  teacher: {\n    display: \"flex\",\n    width: \"100%\"\n  }\n}));\n\nconst data = [1];\n\nconst socket2 = socket();\n\nfunction App() {\n  const classes = useStyles();\n\n  const [connect, setConnect] = useState(true);\n  const [view, setView] = useState(false);\n\n  useEffect(() => {\n    socket2.on('connected', () => {\n      setConnect(true)\n    });\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <div style={{position: \"absolute\"}}>\n        <img src={logo} alt=\"\" style={{\n          width: \"145px\",\n          height: \"auto\",\n          margin: \"10px\",\n          borderRadius: \"4px\",\n          boxShadow: \"0px 0px 13px 7px rgba(82,80,80,1)\"\n        }}/>\n      </div>\n\n      {connect && !view &&\n      <section className={classes.main}>\n        <section className={classes.audience}>\n          {data.map(e => {\n            return (\n              <PlayerComponent ws={socket2} status={0} idx={e} key={e}/>\n            )\n          })\n          }\n        </section>\n\n        <section className={classes.panel}>\n          {/*<ConcentrationChartComponent ws={socket2}/>*/}\n          <WebcamComponent ws={socket2}/>\n        </section>\n      </section>\n      }\n\n      {connect && view &&\n      <section className={classes.main}>\n        <section className={classes.teacher}>\n          <WebcamComponent ws={socket2}/>\n          {/*<ConcentrationChartComponent ws={socket2}/>*/}\n        </section>\n      </section>\n\n      }\n\n      {connect &&\n      <section className={classes.bar}>\n        <NavComponent toggle={setView}/>\n      </section>\n      }\n      {!connect &&\n      <div>\n        <LinearProgress/>\n\n        <div className={classes.info}>\n\n          <h1>Connecting...</h1>\n        </div>\n      </div>\n      }\n\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n//\n//\n//\n//\n//\n//\n// import React, {useEffect, useState} from 'react';\n//\n// import {createMuiTheme, makeStyles, ThemeProvider} from '@material-ui/core/styles';\n// import {orange} from '@material-ui/core/colors';\n// import LinearProgress from \"@material-ui/core/LinearProgress\";\n//\n// import socket from 'socket.io-client';\n//\n// // import CustomCheckbox from \"./components/checkbox\";\n// // import CameraStream from \"./components/CameraStream\";\n// import Dashboard from \"./components/dashboard/Dashboard\";\n// import Camera from \"./components/camera/Camera\";\n// import Nav from \"./components/nav/Nav\";\n// import CanvasMask from \"./components/canvas/Canvas\";\n//\n// const theme = createMuiTheme({\n//   status: {\n//     danger: orange[500],\n//   },\n//   palette: {\n//     primary: {\n//       main: '#ff4400',\n//     },\n//     secondary: {\n//       light: '#0066ff',\n//       main: '#0044ff',\n//       contrastText: '#ffcc00',\n//     },\n//     contrastThreshold: 3,\n//     tonalOffset: 0.2,\n//   },\n//   typography: {\n//     fontSize: \"10px\"\n//   }\n// });\n//\n// const useStyles = makeStyles((theme) => ({\n//   main: {\n//     position: \"relative\",\n//     maxWidth: \"850px\",\n//     width: \"100%\",\n//     margin: \"auto\"\n//   }\n// }));\n//\n// const websocket = socket();\n//\n// function App() {\n//   const classes = useStyles();\n//\n//   const [connect, setConnect] = useState(true);\n//   const [view, setView] = useState(false);\n//\n//   useEffect(() => {\n//     websocket.on('connected', () => {\n//       setConnect(true)\n//     });\n//   }, []);\n//\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <div className={classes.main}>\n//         <LinearProgress/>\n//         <Dashboard/>\n//         <section className={classes.main}>\n//           <section className={classes.teacher}>\n//             <Camera ws={websocket}/>\n//           </section>\n//         </section>\n//       </div>\n//       {/*<CanvasMask></CanvasMask>*/}\n//       <section className={classes.bar}>\n//         <Nav toggle={setView}/>\n//       </section>\n//     </ThemeProvider>\n//   );\n// }\n//\n// export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.1b87fcd4.png\";"],"sourceRoot":""}